cor(25, 36)
getwd()
setwd("Documents/CMEECoursework/Week3/code/")
#Original function
stochrick<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100)
{
#initialize
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
for (pop in 1:length(p0)){#loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr,pop] <- N[yr-1,pop] * exp(r * (1 - N[yr - 1,pop] / K) + rnorm(1,0,sigma))
}
}
return(N)
}
print(system.time(stochrick()))
print(system.time(res1<-stochrick()))
stochrickvect <- function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100)
{
#initialize
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
try1 <- sapply(N, function(x) c(head(x, -1)) * exp(r * (1 - c(head(x, -1)) / K) + rnorm(1,0,sigma)))
#sapply for vector output
#result <- sapply(1:length(p0), function(pop) result2)
#result2 <- sapply(2:numyears, function(yr)
#N[yr] <- N[yr-1] * exp(r * (1 - N[yr - 1] / K) + rnorm(1,0,sigma))
#)
return(try1)
}
res3 <- stochrickvect()
print(res3)
print("Vectorized Stochastic Ricker takes:")
print(system.time(res2<-stochrickvect()))
View(res2)
class(N)
#Clear
rm(list=ls())
#Original function
stochrick<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100)
{
#initialize
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
for (pop in 1:length(p0)){#loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr,pop] <- N[yr-1,pop] * exp(r * (1 - N[yr - 1,pop] / K) + rnorm(1,0,sigma))
}
}
return(N)
}
print(system.time(res1<-stochrick()))
stochrickvect <- function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100)
{
#initialize
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
try1 <- sapply(N, function(x) c(head(x, -1)) * exp(r * (1 - c(head(x, -1)) / K) + rnorm(1,0,sigma)))
#sapply for vector output
#result <- sapply(1:length(p0), function(pop) result2)
#result2 <- sapply(2:numyears, function(yr)
#N[yr] <- N[yr-1] * exp(r * (1 - N[yr - 1] / K) + rnorm(1,0,sigma))
#)
return(try1)
}
print("Vectorized Stochastic Ricker takes:")
print(system.time(res2<-stochrickvect()))
stochrickvect <- function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100)
{
#initialize
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
try1 <- lapply(N, function(x) c(head(x, -1)) * exp(r * (1 - c(head(x, -1)) / K) + rnorm(1,0,sigma)))
#sapply for vector output
#result <- sapply(1:length(p0), function(pop) result2)
#result2 <- sapply(2:numyears, function(yr)
#N[yr] <- N[yr-1] * exp(r * (1 - N[yr - 1] / K) + rnorm(1,0,sigma))
#)
return(try1)
}
print("Vectorized Stochastic Ricker takes:")
print(system.time(res2<-stochrickvect()))
View(res2)
View(res2)
stochrickvect <- function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100)
{
#initialize
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
try1 <- sapply(N, function(x) c(head(x, -1)) * exp(r * (1 - c(head(x, -1)) / K) + rnorm(1,0,sigma)))
#sapply for vector output
#result <- sapply(1:length(p0), function(pop) result2)
#result2 <- sapply(2:numyears, function(yr)
#N[yr] <- N[yr-1] * exp(r * (1 - N[yr - 1] / K) + rnorm(1,0,sigma))
#)
return(try1)
}
print("Vectorized Stochastic Ricker takes:")
print(system.time(res2<-stochrickvect()))
